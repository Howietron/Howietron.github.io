(window.webpackJsonp=window.webpackJsonp||[]).push([[277],{608:function(s,a,n){"use strict";n.r(a);var e=n(2),t=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"dql语句排序与分组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dql语句排序与分组"}},[s._v("#")]),s._v(" DQL语句排序与分组")]),s._v(" "),a("h2",{attrs:{id:"dql-排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dql-排序"}},[s._v("#")]),s._v(" DQL-排序")]),s._v(" "),a("p",[s._v("排序是计算机内经常进行的一种操作，其目的是将一组“无序”的记录序列调整为“有序”的记录序列。分内部排序和外部排序，若整个排序过程不需要访问外存便能完成，则称此类排序问题为内部排序。反之，若参加排序的记录数量很大，整个序列的排序过程不可能在内存中完成，则称此类排序问题为外部排序。内部排序的过程是一个逐步扩大记录的有序序列长度的过程。")]),s._v(" "),a("h3",{attrs:{id:"排序概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序概述"}},[s._v("#")]),s._v(" 排序概述")]),s._v(" "),a("p",[s._v("将数据库表中杂乱无章的数据记录，通过字段的升序或降序的顺序排列的过程叫做排序。")]),s._v(" "),a("h3",{attrs:{id:"排序语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序语法"}},[s._v("#")]),s._v(" 排序语法")]),s._v(" "),a("p",[s._v("通过order by子句")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("格式：\nselect */字段列表 from 数据库表名 [where 条件表达式] [order by 字段名 [asc/desc]];\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("说明：")])]),s._v(" "),a("p",[s._v("asc：升序，默认值")]),s._v(" "),a("p",[s._v("desc：降序")]),s._v(" "),a("h3",{attrs:{id:"单列排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单列排序"}},[s._v("#")]),s._v(" 单列排序")]),s._v(" "),a("p",[s._v("按照一个字段进行排序")]),s._v(" "),a("p",[a("strong",[s._v("案例：")])]),s._v(" "),a("p",[s._v("查看学生信息表中按照英语成绩升序排列，去掉成绩为null的学生。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> select * from students where english is not null order by english;\n+------+--------+------+------+---------+------+------------+-----------------+\n| sid  | sname  | sex  | age  | english | math | entertime  | remark          |\n+------+--------+------+------+---------+------+------------+-----------------+\n| 6    | 王六 | 女  | 20   | 50.0    | 70.0 | 2017-09-01 | 他来自湖南 |\n| 5    | 李三 | 男  | 19   | 60.0    | 88.0 | 2017-09-01 | 他来自湖北 |\n| 2    | 李四 | 男  | 20   | 80.0    | 88.0 | 2017-09-01 | 他来自重庆 |\n| 4    | 张八 | 男  | 18   | 80.0    | 85.0 | 2017-09-01 | 他来自天津 |\n| 3    | 张红 | 女  | 19   | 86.0    | 80.0 | 2017-09-01 | 他来自北京 |\n| 7    | 刘红 | 女  | 18   | 90.0    | 98.0 | 2017-09-01 | 他来自甘肃 |\n| 1    | 张三 | 男  | 19   | 98.5    | 88.0 | 2017-09-01 | 他来自四川 |\n+------+--------+------+------+---------+------+------------+-----------------+\n7 行于数据集 (0.01 秒)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"组合排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合排序"}},[s._v("#")]),s._v(" 组合排序")]),s._v(" "),a("p",[s._v("按照多个字段进行排序，先按1字段排序，在按2字段排序，在按n字段排序")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("格式：\nselect */字段列表 from 数据库表名 [where 条件表达式] [order by 字段名1 [asc/desc],字段名2 [asc/desc],...,字段名n [asc/desc]];\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("案例：")])]),s._v(" "),a("p",[s._v("查看学生信息表中先按照数学成绩升序排列，在按照英语成绩降序排列，最后去掉成绩为null的学生。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> select * from students where english is not null order by math,english desc;\n+------+--------+------+------+---------+------+------------+-----------------+\n| sid  | sname  | sex  | age  | english | math | entertime  | remark          |\n+------+--------+------+------+---------+------+------------+-----------------+\n| 6    | 王六 | 女  | 20   | 50.0    | 70.0 | 2017-09-01 | 他来自湖南 |\n| 3    | 张红 | 女  | 19   | 86.0    | 80.0 | 2017-09-01 | 他来自北京 |\n| 4    | 张八 | 男  | 18   | 80.0    | 85.0 | 2017-09-01 | 他来自天津 |\n| 1    | 张三 | 男  | 19   | 98.5    | 88.0 | 2017-09-01 | 他来自四川 |\n| 2    | 李四 | 男  | 20   | 80.0    | 88.0 | 2017-09-01 | 他来自重庆 |\n| 5    | 李三 | 男  | 19   | 60.0    | 88.0 | 2017-09-01 | 他来自湖北 |\n| 7    | 刘红 | 女  | 18   | 90.0    | 98.0 | 2017-09-01 | 他来自甘肃 |\n+------+--------+------+------+---------+------+------------+-----------------+\n7 行于数据集 (0.02 秒)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"dql-分组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dql-分组"}},[s._v("#")]),s._v(" DQL 分组")]),s._v(" "),a("p",[s._v("数据分组是根据统计研究的需要，将原始数据按照某种标准划分成不同的组别，分组后的的数据称为分组数据。")]),s._v(" "),a("p",[s._v("数据分组应遵循两个基本原则：")]),s._v(" "),a("p",[s._v("穷尽性原则")]),s._v(" "),a("p",[s._v("这一原则就是要求调查的每一单位都能无一例外地划归到某一组去，不会产生“遗漏”现象。")]),s._v(" "),a("p",[s._v("互斥性原则")]),s._v(" "),a("p",[s._v("这一原则就是要求将调查单位分组后，各个组的范围应该互不相容、互为排斥。即每个调查单位在特定的分组标志下只能归属某一组，而不能同时或可能同时归属到几个组。")]),s._v(" "),a("h3",{attrs:{id:"分组概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组概述"}},[s._v("#")]),s._v(" 分组概述")]),s._v(" "),a("ul",[a("li",[s._v("什么是分组")])]),s._v(" "),a("p",[s._v("分组就是将一组行记录按列或表达式的值分组成摘要行记录。通过GROUP BY子句返回每个分组的一个行记录。换句话说，它减少了在结果集中的行数。")]),s._v(" "),a("ul",[a("li",[s._v("分组语法")])]),s._v(" "),a("p",[s._v("– 语法")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("格式：\nselect */字段列表 from 数据库表名 [group by 分组字段名 [having 条件表达式]];\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("– 分组方式")]),s._v(" "),a("p",[s._v("将学生信息表中男、女同学进行分组")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://www.zutuanxue.com:8000/static/media/images/2020/10/20/1603188686160.png",alt:"image20200209001000938.png"}})]),s._v(" "),a("p",[a("strong",[s._v("原始数据")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://www.zutuanxue.com:8000/static/media/images/2020/10/20/1603188795282.png",alt:"image20200209001300283.png"}})]),s._v(" "),a("p",[a("strong",[s._v("分组为：男一组，女一组")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://www.zutuanxue.com:8000/static/media/images/2020/10/20/1603188695335.png",alt:"image20200209001300283.png"}})]),s._v(" "),a("p",[a("strong",[s._v("返回每组第一条数据")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://www.zutuanxue.com:8000/static/media/images/2020/10/20/1603188705609.png",alt:"image20200209002544753.png"}})]),s._v(" "),a("h3",{attrs:{id:"分组应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组应用"}},[s._v("#")]),s._v(" 分组应用")]),s._v(" "),a("ul",[a("li",[s._v("实际分组方式")])]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> select sex from students group by sex;\n+------+\n| sex  |\n+------+\n| 男  |\n| 女  |\n+------+\n2 行于数据集 (0.01 秒)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[a("strong",[s._v("注意：")])]),s._v(" "),a("p",[s._v("当我们使用某个字段分组,在查询的时候也需要将这个字段查询出来,否则看不到数据属于哪组的。")]),s._v(" "),a("p",[s._v("单独分组没什么用处，分组的目的就是为了统计，一般分组会跟"),a("strong",[s._v("聚合函数")]),s._v("一起使用。")]),s._v(" "),a("p",[a("strong",[s._v("案例：")])]),s._v(" "),a("p",[s._v("查询学生信息表中男、女同学的人数")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> select sex,count(*) from students group by sex;\n+------+----------+\n| sex  | count(*) |\n+------+----------+\n| 男  | 6        |\n| 女  | 3        |\n+------+----------+\n2 行于数据集 (0.01 秒)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("ul",[a("li",[s._v("where与having")])]),s._v(" "),a("p",[s._v("– where**")]),s._v(" "),a("p",[s._v("查询学生信息表中数学成绩在80分以上的，男、女同学的人数")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#where后面不能用聚合函数\nmysql> select sex,count(*) from students where math>80 group by sex;\n+------+----------+\n| sex  | count(*) |\n+------+----------+\n| 男  | 4        |\n| 女  | 1        |\n+------+----------+\n2 行于数据集 (0.01 秒)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[a("strong",[s._v("注意：")])]),s._v(" "),a("p",[s._v("where是将不符合条件的先去掉，在分组。")]),s._v(" "),a("p",[s._v("– having")]),s._v(" "),a("p",[s._v("查询学生信息表中男、女同学的人数，人数超过3人显示")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#having n>3 可以写成 having count(*)>3\nmysql> select sex,count(*) as n from students group by sex having n>3;\n+------+---+\n| sex  | n |\n+------+---+\n| 男  | 6 |\n+------+---+\n1 行于数据集 (0.03 秒)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[a("strong",[s._v("注意：")])]),s._v(" "),a("p",[s._v("having是先分组，在将分组后不符合条件的去掉。")]),s._v(" "),a("p",[s._v("– where与having区别")]),s._v(" "),a("p",[a("strong",[s._v("where")]),s._v(" "),a("strong",[s._v("子句")])]),s._v(" "),a("p",[s._v("在分组之前过滤数据，即先过滤再分组。")]),s._v(" "),a("p",[s._v("where 后面不可以使用聚合函数。")]),s._v(" "),a("p",[a("strong",[s._v("having")]),s._v(" "),a("strong",[s._v("子句")])]),s._v(" "),a("p",[s._v("在分组之后过滤数据，即先分组再过滤。")]),s._v(" "),a("p",[s._v("having 后面可以使用聚合函数。")])])}),[],!1,null,null,null);a.default=t.exports}}]);